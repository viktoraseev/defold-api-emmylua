{
  "elements": [
    {
      "type": "MESSAGE",
      "name": "play_animation",
      "brief": "play a sprite animation",
      "description": "Post this message to a sprite component to make it play an animation from its tile set.",
      "returnvalues": [],
      "parameters": [
        {
          "name": "id",
          "doc": "the id of the animation to play",
          "types": [
            "hash"
          ],
          "is_optional": "False"
        }
      ],
      "examples": "In the example, it is assumed that the instance of the script has a sprite-component with id \"sprite\". The sprite itself is assumed to be bound to a tile set with animations \"walk\" and \"jump\".\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;#sprite&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;play_animation&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s2\">&quot;jump&quot;</span><span class=\"p\">)})</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": [],
      "language": ""
    },
    {
      "type": "MESSAGE",
      "name": "animation_done",
      "brief": "reports that an animation has completed",
      "description": "This message is sent to the sender of a <code>play_animation</code> message when the\nanimation has completed.\nNote that this message is sent only for animations that play with the following\nplayback modes:\n<ul>\n<li>Once Forward</li>\n<li>Once Backward</li>\n<li>Once Ping Pong</li>\n</ul>\nSee <a href=\"#play_animation\">play_animation</a> for more information and examples of how to use\nthis message.",
      "returnvalues": [],
      "parameters": [
        {
          "name": "current_tile",
          "doc": "the current tile of the sprite",
          "types": [
            "number"
          ],
          "is_optional": "False"
        },
        {
          "name": "id",
          "doc": "id of the animation that was completed",
          "types": [
            "hash"
          ],
          "is_optional": "False"
        }
      ],
      "examples": "How to sequence two animations together.\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">function</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span>\n  <span class=\"c1\">-- play jump animation at init</span>\n  <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;#sprite&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;play_animation&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s2\">&quot;jump&quot;</span><span class=\"p\">)})</span>\n<span class=\"kr\">end</span>\n\n<span class=\"kr\">function</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">message_id</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">sender</span><span class=\"p\">)</span>\n  <span class=\"c1\">-- check for animation done response</span>\n  <span class=\"kr\">if</span> <span class=\"n\">message_id</span> <span class=\"o\">==</span> <span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s2\">&quot;animation_done&quot;</span><span class=\"p\">)</span> <span class=\"kr\">then</span>\n    <span class=\"c1\">-- start the walk animation</span>\n    <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;#sprite&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;play_animation&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">hash</span><span class=\"p\">(</span><span class=\"s2\">&quot;walk&quot;</span><span class=\"p\">)</span> <span class=\"p\">})</span>\n  <span class=\"kr\">end</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": [],
      "language": ""
    }
  ],
  "info": {
    "namespace": "sprite",
    "name": "Sprite",
    "brief": "Sprite API documentation",
    "description": "Sprite API documentation",
    "path": "../../proto/gamesys/sprite_ddf.proto",
    "file": "",
    "notes": [],
    "language": "Lua"
  }
}